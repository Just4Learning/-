{
/*
	 // Place your snippets for C here. Each snippet is defined under a snippet name and has a prefix, body and 
	 // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	 // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	 // same ids are connected.
	 // Example:
	 "Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
    // If Else =================================================== 
    "if... 无else": {
        "prefix": "ifa",
        "body": [
            "if (${1:expression})",
            "{",
            "    ${2:expression}",
            "}"
        ],
        "description": "if... 无else"
    },
    "if...else...": {
        "prefix": "ifelse",
        "body": [
            "if (${1:expression})",
            "{",
            "    ${2:expression1}",
            "}"
            "else",
            "{",
            "    ${3:expression2}",
            "}"
        ],
        "description": "if...else..."
    },
    "if...else if...": {
        "prefix": "ifelif",
        "body": [
            "if (${1:expression})",
            "{",
            "    ${2:expression1}",
            "}"
            "else if (${3:expression2})",
            "{",
            "    ${4:expression2}",
            "}"
            "else",
            "{",
            "    ${5:expression3}",
            "}"
        ],
        "description": "if...else if..."
    },

    // Loops ===========================================================
    "for 循环": {
        "prefix": "fora",
        "body": [
            "for (${1:initialize}, ${2:test}, ${3:update})",
            "{",
            "    ${4:expression}",
            "}"
        ],
        "description": "for 循环"
    },
    "while 循环": {
        "prefix": "whilea",
        "body": [
            "while (${1:expression})",
            "{",
            "    ${2:expression}",
            "}"
        ],
        "description": "while 循环"
    },
    "do...while... 循环": {
        "prefix": "dowhile",
        "body": [
            "do {",
            "    ${1:expression}",
            "} while (${2:expression});"
        ],
        "description": "do...while... 循环"
    },

    // SWITCH...CASE ===================================================
    "switch...case... Case 无花括号": {
        "prefix": "switcha",
        "body": [
            "switch (${1:expression})",
            "{",
            "    case ${2:expression1}:",
            "        ${3:statement 1}",
            "        break,",
            "    default:",
            "        ${4:statement 2}"
            "        break,"
            "}"
        ],
        "description": "switch...case... Case 无花括号"
    },
    "switch...case... Case 有花括号": {
        "prefix": "switchbbraces{}",
        "body": [
            "switch (${1:expression})",
            "{",
            "    case ${2:expression1}:",
            "    {",
            "        ${3:statement 1}",
            "        break,",
            "    }",
            "    default:",
            "    {",
            "        ${4:statement 2}"
            "        break,"
            "    }",
            "}"
        ],
        "description": "switch...case... Case 有花括号"
    },
}
